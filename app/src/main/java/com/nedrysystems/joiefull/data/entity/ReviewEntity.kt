package com.nedrysystems.joiefull.data.entity

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.ForeignKey
import androidx.room.Index
import androidx.room.PrimaryKey

@Entity(
    tableName = "review",
    foreignKeys = [
        ForeignKey(
            entity = UserEntity::class,
            parentColumns = ["id"],
            childColumns = ["userId"],  // Correspond à "userId" en camelCase
            onDelete = ForeignKey.CASCADE
        ),
        ForeignKey(
            entity = ProductEntity::class,
            parentColumns = ["id"],
            childColumns = ["productId"],  // Correspond à "productId" en camelCase
            onDelete = ForeignKey.CASCADE
        )
    ],
    indices = [Index(value = ["userId"]), Index(value = ["productId"])]  // Indices en camelCase
)
data class ReviewEntity(

    /**
     * The unique identifier for the review.
     * This will be automatically generated by the database.
     */
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0,

    /**
     * The ID of the user who created the review.
     * It is a foreign key referencing the UserEntity.
     */
    @ColumnInfo(name = "userId")  // Utilise "userId" en camelCase
    val userId: Int,

    /**
     * The ID of the product being reviewed.
     * It is a foreign key referencing the ProductEntity.
     */
    @ColumnInfo(name = "productId")  // Utilise "productId" en camelCase
    val productId: Int,


    /**
     * The rating given to the product by the user.
     * This rating typically ranges from 1 to 5.
     */
    @ColumnInfo(name = "rating")  // Utilise "rating"
    val rate: Int,

    /**
     * A textual comment provided by the user about the product.
     */
    @ColumnInfo(name = "comment")  // Utilise "comment"
    val comment: String
)
